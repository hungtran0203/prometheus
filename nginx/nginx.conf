# Metrics endpoint server
server {
    listen 80;
    server_name dev.local;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Nginx metrics endpoint for Prometheus - now accessible from any IP
    location /stub_status {
        stub_status on;
        access_log off;
        # Removed access restrictions
    }
    
    # Browser-friendly status page with more information
    location /status {
        stub_status on;
        access_log off;
        add_header Content-Type text/html;
        return 200 '<html><body style="font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px;">
            <h1>Nginx Proxy Status</h1>
            <h2>Statistics</h2>
            <p>This page shows raw Nginx statistics. For Prometheus formatted metrics, visit <a href="http://localhost:9113/metrics">http://localhost:9113/metrics</a></p>
            <hr>
            <h2>Port Forwarding</h2>
            <ul>
                <li><strong>3000 → 33000</strong>: Node.js</li>
                <li><strong>3001 → 33001</strong>: Next.js</li>
                <li><strong>3002 → 33002</strong>: Remix</li>
                <li><strong>8000 → 38000</strong>: Rust</li>
                <li><strong>3003 → 33003</strong>: React</li>
            </ul>
            <hr>
            <h2>Monitoring</h2>
            <ul>
                <li><strong>Nginx Metrics</strong>: <a href="http://localhost:9113/metrics">http://localhost:9113/metrics</a></li>
                <li><strong>Prometheus</strong>: <a href="http://localhost:9090">http://localhost:9090</a></li>
                <li><strong>Grafana</strong>: <a href="http://localhost:3333">http://localhost:3333</a></li>
            </ul>
        </body></html>';
    }
    
    # Default route - can be used for a status page or redirects
    location / {
        return 200 'Dev Proxy Status: OK\nAvailable ports:\n- 3000 -> 33000 (Node.js)\n- 3001 -> 33001 (Next.js)\n- 3002 -> 33002 (Remix)\n- 8000 -> 38000 (Rust)\n- 3003 -> 33003 (React)';
        add_header Content-Type text/plain;
    }
}

# Port forwarding for Node.js app (3000 -> 33000)
server {
    listen 3000;
    server_name dev.local;
    access_log /var/log/nginx/nodejs_access.log;
    error_log /var/log/nginx/nodejs_error.log;

    location / {
        proxy_pass http://host.docker.internal:33000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Port forwarding for Next.js app (3001 -> 33001)
server {
    listen 3001;
    server_name dev.local;
    access_log /var/log/nginx/nextjs_access.log;
    error_log /var/log/nginx/nextjs_error.log;

    location / {
        proxy_pass http://host.docker.internal:33001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Port forwarding for Remix app (3002 -> 33002)
server {
    listen 3002;
    server_name dev.local;
    access_log /var/log/nginx/remix_access.log;
    error_log /var/log/nginx/remix_error.log;

    location / {
        proxy_pass http://host.docker.internal:33002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Port forwarding for Rust app (8000 -> 38000)
server {
    listen 8000;
    server_name dev.local;
    access_log /var/log/nginx/rust_access.log;
    error_log /var/log/nginx/rust_error.log;

    location / {
        proxy_pass http://host.docker.internal:38000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Port forwarding for React app (3003 -> 33003)
server {
    listen 3003;
    server_name dev.local;
    access_log /var/log/nginx/react_access.log;
    error_log /var/log/nginx/react_error.log;

    location / {
        proxy_pass http://host.docker.internal:33003;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
} 