services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3333:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: always

  # Node exporter is commented out because we're using the native one
  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node-exporter
  #   ports:
  #     - "9100:9100"
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  #   restart: always

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@host.docker.internal:5432/postgres?sslmode=disable
      - PG_EXPORTER_CONFIG_FILE=""
    restart: always
    # Uncomment and modify if you have an existing PostgreSQL instance
    # depends_on:
    #   - postgres

  # Development proxy with metrics
  nginx:
    image: nginx:latest
    container_name: dev-proxy
    ports:
      - "8686:80"      # Main metrics port
      - "3000:3000"    # Node.js port
      - "8000:8000"    # Rust port
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logs:/var/log/nginx
    restart: always

  # Main Nginx exporter for general metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"  # Exporter metrics port
    command:
      - "--nginx.scrape-uri=http://nginx:80/stub_status"
      - "--prometheus.const-label=app=general"
    depends_on:
      - nginx
    restart: always

  # Node.js app metrics exporter
  nodejs-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nodejs-exporter
    ports:
      - "9114:9113"  # Note: externally exposed on a different port
    command:
      - "--nginx.scrape-uri=http://nginx:3000/nodejs_status"
      - "--prometheus.const-label=app=nodejs"
      - "--prometheus.const-label=port=3000"
    depends_on:
      - nginx
    restart: always

  # Rust app metrics exporter
  rust-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: rust-exporter
    ports:
      - "9117:9113"  # Note: externally exposed on a different port
    command:
      - "--nginx.scrape-uri=http://nginx:8000/rust_status"
      - "--prometheus.const-label=app=rust"
      - "--prometheus.const-label=port=8000"
    depends_on:
      - nginx
    restart: always

  # Uncomment if you need PostgreSQL as well
  # postgres:
  #   image: postgres:13
  #   container_name: postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: always

volumes:
  prometheus_data:
  grafana_data:
  # postgres_data: 