services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/conf.d:/etc/prometheus/conf.d
      - prometheus_data:/prometheus
    networks:
      - monitoring_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3333:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring_network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
      - loki
    restart: always

  # Loki for log storage
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml
      - loki_data:/loki
    networks:
      - monitoring_network
    command: -config.file=/etc/loki/config.yml
    restart: always

  # Vector for log collection and processing
  vector:
    image: timberio/vector:latest
    container_name: vector
    ports:
      - "8888:8686" # Vector API server
    volumes:
      - ./vector/vector.toml:/etc/vector/vector.toml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring_network
    depends_on:
      - loki
    command: --config /etc/vector/vector.toml
    restart: always

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    networks:
      - monitoring_network
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@host.docker.internal:5432/postgres?sslmode=disable
      - PG_EXPORTER_CONFIG_FILE=""
    restart: always

  # Development proxy with metrics
  nginx:
    image: nginx:latest
    container_name: dev-proxy
    ports:
      - "8686:80"      # Main metrics port
      - "3000:3000"    # Node.js port
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/servers:/etc/nginx/servers
      - ./nginx/logs:/var/log/nginx
    networks:
      - monitoring_network
    restart: always

  # Main Nginx exporter for general metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"  # Exporter metrics port
    command:
      - "--nginx.scrape-uri=http://nginx:80/stub_status"
      - "--prometheus.const-label=app=general"
    networks:
      - monitoring_network
    depends_on:
      - nginx
    restart: always

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  monitoring_network:
    name: prometheus_monitoring_network
