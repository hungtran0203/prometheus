#!/bin/bash

# Setup script for configuring Vector with a unified single port for all app logs
# Usage: ./scripts/utils/setup_unified_vector.sh
# This script will update Vector to use a single port (45000) for all application logs

set -e

echo "üîß Setting up Vector with unified port configuration..."

# Check if vector directory exists
if [ ! -d "vector" ]; then
  mkdir -p vector
  echo "üìÅ Created vector directory"
fi

# Create new Vector configuration with a single unified socket
cat > vector/vector.toml << EOF
# Vector configuration for logging with unified port
# This file was generated by setup_unified_vector.sh

# Source for collecting logs from Docker
[sources.docker_source]
type = "docker_logs"
docker_host = "unix:///var/run/docker.sock"
include_labels = ["com.docker.compose.service"]
auto_partial_merge = true

# Single unified socket source for all application logs
[sources.unified_socket]
type = "socket"
mode = "tcp"
address = "0.0.0.0:45000"

# Parse the app name from the log line
[transforms.app_log_parser]
type = "remap"
inputs = ["unified_socket"]
source = '''
  # Extract app name from log prefix [app:name]
  app_pattern = parse_regex(.message, r'^\[app:(?P<app_name>[^\]]+)\](?P<actual_message>.*)$')
  if exists(app_pattern) {
    .app = app_pattern.app_name
    .message = app_pattern.actual_message
    .host = get_hostname() ?? "localhost"
  } else {
    .app = "unknown"
    .host = get_hostname() ?? "localhost"
  }
'''

# Output logs to Loki
[sinks.loki]
type = "loki"
inputs = ["docker_source", "app_log_parser"]
endpoint = "http://loki:3100"
encoding.codec = "json"
labels.app = "{{ app }}"
labels.host = "{{ host }}"
EOF

echo "‚úÖ Created new Vector configuration with unified port"

# Update docker-compose.yml to expose the unified port
if grep -q "45000:45000" docker-compose.yml; then
  echo "üëç Port 45000 already exposed in docker-compose.yml"
else
  # Use sed to add the port mapping
  sed -i.bak '/8888:8686/a\\      - "45000:45000" # Unified socket port for all app logs' docker-compose.yml
  if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è Failed to update docker-compose.yml automatically"
    echo "Please manually add the following line to the vector service in docker-compose.yml:"
    echo '      - "45000:45000" # Unified socket port for all app logs'
  else
    echo "‚úÖ Updated docker-compose.yml with unified port mapping"
    rm -f docker-compose.yml.bak
  fi
fi

# Restart Vector to apply changes
echo "üîÑ Restarting Vector to apply changes..."
docker compose restart vector

echo "‚úÖ Setup complete! Vector is now configured with a unified port (45000)"
echo "üìã You can now use the unified_log_forwarder.sh script to send logs from any application:"
echo "   ./scripts/utils/unified_log_forwarder.sh app_name 'command to run'"
echo "   Example: ./scripts/utils/unified_log_forwarder.sh node_server 'node server.js'" 